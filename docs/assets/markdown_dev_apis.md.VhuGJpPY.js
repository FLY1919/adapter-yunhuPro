import{_ as i,c as a,o as t,ae as e}from"./chunks/framework.CliRSA9F.js";const g=JSON.parse('{"title":"APIs","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/dev/apis.md","filePath":"markdown/dev/apis.md"}'),l={name:"markdown/dev/apis.md"};function n(h,s,p,d,r,k){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="apis" tabindex="-1">APIs <a class="header-anchor" href="#apis" aria-label="Permalink to &quot;APIs&quot;">​</a></h1><h2 id="获取-bot-实例" tabindex="-1">获取 Bot 实例 <a class="header-anchor" href="#获取-bot-实例" aria-label="Permalink to &quot;获取 Bot 实例&quot;">​</a></h2><p>以下所有 bot 均通过这样获取：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> bot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx.bots).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b.selfId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your_bot_uid&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b.user?.id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your_bot_uid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bot.status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Universal.Status.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ONLINE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ctx.logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`机器人离线或未找到。\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (bot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在这里继续使用 bot.方法</span></span></code></pre></div><h2 id="消息相关-message" tabindex="-1">消息相关 (Message) <a class="header-anchor" href="#消息相关-message" aria-label="Permalink to &quot;消息相关 (Message)&quot;">​</a></h2><h3 id="sendmessage" tabindex="-1">sendMessage() <a class="header-anchor" href="#sendmessage" aria-label="Permalink to &quot;sendMessage()&quot;">​</a></h3><p>发送消息到指定的频道。这是 Koishi 的标准方法，适配器实现了其具体逻辑。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(channelId: string, content: Fragment, guildId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SendOptions): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string[]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>channelId</code></strong>: 频道 ID。对于私聊，格式为 <code>private:USER_ID</code>；对于群聊，格式为 <code>group:GROUP_ID</code>。</li><li><strong><code>content</code></strong>: 要发送的消息内容，可以是字符串或使用 <code>h()</code> 创建的消息元素。</li><li><strong>返回值</strong>: <code>Promise&lt;string[]&gt;</code>，包含已发送消息的 ID 列表。</li></ul><h3 id="deletemessage" tabindex="-1">deleteMessage() <a class="header-anchor" href="#deletemessage" aria-label="Permalink to &quot;deleteMessage()&quot;">​</a></h3><p>撤回（删除）一条已发送的消息。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deleteMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(channelId: string, messageId: string): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;void&gt;</span></span></code></pre></div><ul><li><strong><code>channelId</code></strong>: 消息所在的频道 ID。</li><li><strong><code>messageId</code></strong>: 要删除的消息 ID。</li><li><strong>返回值</strong>: <code>Promise&lt;void&gt;</code>。</li></ul><h3 id="getmessage" tabindex="-1">getMessage() <a class="header-anchor" href="#getmessage" aria-label="Permalink to &quot;getMessage()&quot;">​</a></h3><p>获取单条消息的详细信息。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(channelId: string, messageId: string): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Universal.Message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>channelId</code></strong>: 消息所在的频道 ID。</li><li><strong><code>messageId</code></strong>: 要获取的消息 ID。</li><li><strong>返回值</strong>: <code>Promise&lt;Universal.Message&gt;</code>，一个符合 Koishi 规范的消息对象。</li></ul><h3 id="getyunhumessagelist" tabindex="-1">getYunhuMessageList() <a class="header-anchor" href="#getyunhumessagelist" aria-label="Permalink to &quot;getYunhuMessageList()&quot;">​</a></h3><p>获取云湖原始的消息列表。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getYunhuMessageList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(channelId: string, messageId: string, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { before?: number; after</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number }): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>channelId</code></strong>: 消息所在的频道 ID。</li><li><strong><code>messageId</code></strong>: 作为基准点的消息 ID。</li><li><strong><code>options</code></strong>: 可选参数。 <ul><li><code>before</code>: 获取 <code>messageId</code> 之前的消息数量。</li><li><code>after</code>: 获取 <code>messageId</code> 之后的消息数量。</li></ul></li><li><strong>返回值</strong>: <code>Promise&lt;any&gt;</code>，云湖 API 返回的原始消息列表数据。</li></ul><h2 id="资源上传-resource-upload" tabindex="-1">资源上传 (Resource Upload) <a class="header-anchor" href="#资源上传-resource-upload" aria-label="Permalink to &quot;资源上传 (Resource Upload)&quot;">​</a></h2><h3 id="uploadimage" tabindex="-1">uploadImage() <a class="header-anchor" href="#uploadimage" aria-label="Permalink to &quot;uploadImage()&quot;">​</a></h3><p>上传一张图片，获取 <code>imageKey</code>，用于发送图片消息。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uploadImage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(image: string </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Buffer): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>image</code></strong>: 图片资源，可以是图片的 URL (字符串) 或 Buffer。</li><li><strong>返回值</strong>: <code>Promise&lt;string&gt;</code>，上传成功后返回的 <code>imageKey</code>。</li></ul><h3 id="uploadvideo" tabindex="-1">uploadVideo() <a class="header-anchor" href="#uploadvideo" aria-label="Permalink to &quot;uploadVideo()&quot;">​</a></h3><p>上传一个视频，获取 <code>videoKey</code>，用于发送视频消息。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uploadVideo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(video: string </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Buffer): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>video</code></strong>: 视频资源，可以是视频的 URL (字符串) 或 Buffer。</li><li><strong>返回值</strong>: <code>Promise&lt;string&gt;</code>，上传成功后返回的 <code>videoKey</code>。</li></ul><h3 id="uploadfile" tabindex="-1">uploadFile() <a class="header-anchor" href="#uploadfile" aria-label="Permalink to &quot;uploadFile()&quot;">​</a></h3><p>上传一个文件，获取 <code>fileKey</code>，用于发送文件消息。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uploadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fileData: string </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Buffer): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>fileData</code></strong>: 文件资源，可以是文件的 URL (字符串) 或 Buffer。</li><li><strong>返回值</strong>: <code>Promise&lt;string&gt;</code>，上传成功后返回的 <code>fileKey</code>。</li></ul><h2 id="用户与群组-user-guild" tabindex="-1">用户与群组 (User &amp; Guild) <a class="header-anchor" href="#用户与群组-user-guild" aria-label="Permalink to &quot;用户与群组 (User &amp; Guild)&quot;">​</a></h2><h3 id="getuser" tabindex="-1">getUser() <a class="header-anchor" href="#getuser" aria-label="Permalink to &quot;getUser()&quot;">​</a></h3><p>获取用户的详细信息。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userId: string): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Universal.User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>userId</code></strong>: 要查询的用户 ID。</li><li><strong>返回值</strong>: <code>Promise&lt;Universal.User&gt;</code>，一个符合 Koishi 规范的用户对象。</li></ul><h3 id="getguild" tabindex="-1">getGuild() <a class="header-anchor" href="#getguild" aria-label="Permalink to &quot;getGuild()&quot;">​</a></h3><p>获取群组（服务器）的详细信息。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getGuild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(guildId: string): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Universal.Guild</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>guildId</code></strong>: 要查询的群组 ID。</li><li><strong>返回值</strong>: <code>Promise&lt;Universal.Guild&gt;</code>，一个符合 Koishi 规范的群组对象。</li></ul><h3 id="getguildmember" tabindex="-1">getGuildMember() <a class="header-anchor" href="#getguildmember" aria-label="Permalink to &quot;getGuildMember()&quot;">​</a></h3><p>获取群组成员的详细信息。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getGuildMember</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(guildId: string, userId: string): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Universal.GuildMember</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>guildId</code></strong>: 成员所在的群组 ID。</li><li><strong><code>userId</code></strong>: 要查询的成员的用户 ID。</li><li><strong>返回值</strong>: <code>Promise&lt;Universal.GuildMember&gt;</code>，一个符合 Koishi 规范的群组成员对象。</li></ul><h3 id="getchannel" tabindex="-1">getChannel() <a class="header-anchor" href="#getchannel" aria-label="Permalink to &quot;getChannel()&quot;">​</a></h3><p>获取频道（子频道）的详细信息。在云湖中，一个群组就是一个频道。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getChannel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(channelId: string, guildId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Universal.Channel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>channelId</code></strong>: 要查询的频道 ID。</li><li><strong><code>guildId</code></strong>: (可选) 频道所在的群组 ID。</li><li><strong>返回值</strong>: <code>Promise&lt;Universal.Channel&gt;</code>，一个符合 Koishi 规范的频道对象。</li></ul><h2 id="看板-board" tabindex="-1">看板 (Board) <a class="header-anchor" href="#看板-board" aria-label="Permalink to &quot;看板 (Board)&quot;">​</a></h2><p>看板是云湖平台提供的一种置顶消息功能，像群公告。</p><h3 id="setboard" tabindex="-1">setBoard() <a class="header-anchor" href="#setboard" aria-label="Permalink to &quot;setBoard()&quot;">​</a></h3><p>为指定用户设置看板（个人看板）。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBoard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chatId: string, contentType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;text&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;markdown&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, content: string, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { memberId?: string; expireTime</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number }): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>chatId</code></strong>: 对话 ID (私聊为用户 ID，群聊为群组 ID)。</li><li><strong><code>contentType</code></strong>: 内容类型。</li><li><strong><code>content</code></strong>: 看板内容。</li><li><strong><code>options</code></strong>: <ul><li><code>memberId</code>: 要设置看板的用户 ID。</li><li><code>expireTime</code>: (可选) 过期时间戳 (秒)。</li></ul></li><li><strong>返回值</strong>: <code>Promise&lt;any&gt;</code>，API 返回的原始数据。</li></ul><h3 id="setallboard" tabindex="-1">setAllBoard() <a class="header-anchor" href="#setallboard" aria-label="Permalink to &quot;setAllBoard()&quot;">​</a></h3><p>设置全局看板（对群内所有人生效）。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAllBoard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chatId: string, contentType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;text&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;markdown&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, content: string, options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { expireTime?: number }): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>chatId</code></strong>: 群组 ID。</li><li><strong><code>contentType</code></strong>: 内容类型。</li><li><strong><code>content</code></strong>: 看板内容。</li><li><strong><code>options</code></strong>: <ul><li><code>expireTime</code>: (可选) 过期时间戳 (秒)。</li></ul></li><li><strong>返回值</strong>: <code>Promise&lt;any&gt;</code>，API 返回的原始数据。</li></ul><h3 id="dismissboard" tabindex="-1">dismissBoard() <a class="header-anchor" href="#dismissboard" aria-label="Permalink to &quot;dismissBoard()&quot;">​</a></h3><p>取消指定用户的看板。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dismissBoard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chatId: string, chatType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;group&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, memberId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong><code>chatId</code></strong>: 对话 ID。</li><li><strong><code>chatType</code></strong>: 对话类型。</li><li><strong><code>memberId</code></strong>: (可选) 要取消看板的用户 ID。如果 <code>chatType</code> 为 <code>user</code>，则此项必填。</li><li><strong>返回值</strong>: <code>Promise&lt;any&gt;</code>，API 返回的原始数据。</li></ul><h3 id="dismissallboard" tabindex="-1">dismissAllBoard() <a class="header-anchor" href="#dismissallboard" aria-label="Permalink to &quot;dismissAllBoard()&quot;">​</a></h3><p>取消全局看板。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bot.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dismissAllBoard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><strong>返回值</strong>: <code>Promise&lt;any&gt;</code>，API 返回的原始数据。</li></ul>`,69)])])}const c=i(l,[["render",n]]);export{g as __pageData,c as default};
